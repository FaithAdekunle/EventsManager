{
  "swagger": "2.0",
  "info": {
    "description": "API for adding, retrieving and removing centers and events",
    "version": "1",
    "title": "EventsManager API",
    "contact": {
      "email": "adegold71@gmail.com"
    }
  },
  "basePath": "/api/v1/",
  "tags": [
    {
      "name": "Users",
      "description": "Signup and sign in to user and admin accounts"
    },
    {
      "name": "Centers",
      "description": "Create, Retrieve and Update event centers"
    },
    {
      "name": "Events",
      "description": "Create, Retrieve, Update and Delete user events"
    }
  ],
  "schemes": [
    "https", "http"
  ],
  "paths": {
     "/users": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Creates a new User account",
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "user details used to create new user",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserSignup"
              }
          }
          ],
          "responses": {
            "201": {
              "description": "Successful signup request",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid signup request",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            },
            "409": {
              "description": "Email conflict",
              "schema": {
                "items": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
     },
     "/users/login": {
        "post": {
          "tags": [
            "Users"
          ],
          "summary": "Logs in existing User account",
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "description": "user details used to log in existing user",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UserLogin"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful login request",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid login request",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            },
            "500": {
              "description": "Internal server error",
              "schema": {
                "items": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
     },
     "/centers": {
      "post": {
        "tags": [
          "Centers"
        ],
        "summary": "Creates a new event center",
        "consumes" : [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "adminSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details used to create new event center",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrEditCenter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful post request",
            "schema": {
              "$ref": "#/definitions/Center"
            }
          },
          "400": {
            "description": "Invalid post request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Admin not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Name/Location error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "items": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Centers"
        ],
        "summary": "Fetches all existing event centers",
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "name": "filter",
            "in": "query",
            "description": "fetched centers will have this value in their names or addresses",
            "required": false,
            "type": "string"
          },
          {
            "name": "facility",
            "in": "query",
            "description": "fetched centers will have this facility in their list of facilities",
            "required": false,
            "type": "string"
          },
          {
            "name": "capacity",
            "in": "query",
            "description": "fetched centers can contain this or more guests",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset the fetched centers by this value",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "not more than this number of centers will be returned",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/Center"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "items": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      }
    },
    "/centers/{id}": {
      "put": {
        "tags": [
          "Centers"
        ],
        "summary": "Modifies an existing event center",
        "consumes" : [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "adminSecurity": []
          }
        ],
        "parameters": [
          { 
            "name": "id",
            "in": "path",
            "description": "id of the center to be modified",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Details used to edit existing event center",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrEditCenter"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/Center"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Admin not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Name/Location error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Centers"
        ],
        "summary": "Fetches an existing event center",
        "produces": [
          "application/json"
        ],
        "parameters": [
          { 
            "name": "id",
            "in": "path",
            "description": "id of the center to be fetched",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/Center"
            }
          },
          "404": {
            "description": "Center not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Admin not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create new user event",
        "consumes" :[
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "userSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Details used to create new user event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrEditEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful request",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User/Center not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Date conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Fetches existing user events",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "userSecurity": []
          }
        ],
        "parameters": [
          {
            "name": "upcoming",
            "in": "query",
            "description": "If true, only upcoming events will be fetched",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset the fetched events by this value",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "not more than this number of events are returned",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/:centerId/events":{
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Fetches existing center events",
        "produces": [
          "application/json"
        ],
        "parameters": [
          { 
            "name": "id",
            "in": "path",
            "description": "id of the center whose events should be fetched",
            "required": true,
            "type": "integer"
          },
          {
            "name": "upcoming",
            "in": "query",
            "description": "If true, only upcoming events will be fetched",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset the fetched events by this value",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "not more than this number of events are returned",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/events/{id}": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Modifies existing user event",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "security": [
          {
            "userSecurity": []
          }
        ],
        "parameters": [
          { 
            "name": "id",
            "in": "path",
            "description": "id of the event to be modified",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Details used to create new user event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrEditEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User/Center not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Date conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Events"
        ],
        "summary": "Deletes existing user event",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "userSecurity": []
          }
        ],
        "parameters": [
          { 
            "name": "id",
            "in": "path",
            "description": "id of the event to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/Success"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User/Event not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/events/{id}/decline": {
      "put": {
        "tags": [
          "Events"
        ],
        "summary": "Declines existing user event",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "adminSecurity": []
          }
        ],
        "parameters": [
          { 
            "name": "id",
            "in": "path",
            "description": "id of the event to be declined",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "schema": {
              "items": {
                "$ref": "#/definitions/Success"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User/Event not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "userSecurity": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    },
    "adminSecurity": {
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "definitions": {
    "AddOrEditEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "centerId": {
          "type": "integer"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "guests": {
          "type": "integer"
        }
      },
      "required": ["name", "type", "centerId", "start", "end", "guests"]
    },
    "Event": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "event": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "center": {
              "type": "object",
              "properties":{
                "name": {
                  "type": "string"
                },
                "capacity": {
                  "type": "integer"
                }
              }
            },
            "start": {
              "type": "string"
            },
            "end": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "guests": {
              "type": "integer"
            }
          },
          "required": ["name", "type", "start", "end", "guests", "id"]
        }
      },
      "required": ["status", "event"]
    },
    "AddOrEditCenter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "facilities": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "capacity": {
          "type": "integer"
        },
        "images": {
          "type": "string"
        }
      },
      "required": ["name", "description", "address", "cost", "capacity", "facilities", "images"]
    },
    "Center": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "center": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "facilities": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "address": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "cost": {
              "type": "integer"
            },
            "capacity": {
              "type": "integer"
            },
            "images": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["name", "description", "address", "cost", "capacity", "facilities", "id", "images"]
        }
      },
      "required": ["status", "center"]
    },
    "User": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["status", "token"]
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["email", "password"]
    },
    "UserSignup": {
      "type": "object",
      "properties": {
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      },
      "required": ["email", "password", "confirmPassword", "fullName"]
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      },
      "required": [
        "status", "error"
      ]
    },
    "Success": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "required": ["status"]
    }
  }
}